<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
<!-- 	<bean -->
<!-- 		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 		<property name="prefix" value="/WEB-INF/views/" /> -->
<!-- 		<property name="suffix" value=".jsp" /> -->
<!-- 	</bean> -->

	<context:component-scan base-package="com.mycompany.web.controller" />
	<context:component-scan base-package="com.mycompany.dao.classes" />
	<context:component-scan base-package="com.mycompany.web.converter" />

	<!-- main/resources -->
	<import resource="classpath:jpa-config.xml" />

	<!-- Используем файл classpath:messages.properties для замены кодов ошибок 
		на значения в BindingResult.reject -->

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<!-- ВКЛЮЧАЕМ ВОЗМОЖНОСТЬ ИСПОЛЬЗОВАТЬ КОНВЕРТЕРЫ -->

	<mvc:annotation-driven conversion-service="conversionService" />

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.mycompany.web.converter.StringToClientConverter" />
				<bean class="com.mycompany.web.converter.StringToAuthorConverter" />
				<bean class="com.mycompany.web.converter.StringToGenreConverter" />
				<bean class="com.mycompany.web.converter.StringToPublishingHouseConverter" />
				<bean class="com.mycompany.web.converter.StringToPaperTypeConverter" />
				<bean class="com.mycompany.web.converter.StringToCityConverter" />
				<bean class="com.mycompany.web.converter.CityToStringConverter" />
			</set>
		</property>
	</bean>
	
	<!-- Подключаем возможность использовать Apache Tiles -->
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    <property name="definitions">
        <list>
            <value>/WEB-INF/tiles.xml</value>
        </list>
    </property>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>


</beans>
